name: Deploy to Dev

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-1
  STACK_NAME: me2resh-daily-dev
  NODE_VERSION: '18'

jobs:
  deploy:
    name: Deploy to AWS Dev
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      # Skip tests for now - will be implemented later
      # - name: Run tests
      #   run: npm test

      - name: Setup Python for AWS SAM
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup AWS SAM CLI
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActions-Me2reshDaily
          aws-region: ${{ env.AWS_REGION }}

      - name: Verify AWS credentials
        run: |
          aws sts get-caller-identity
          echo "AWS Region: ${{ env.AWS_REGION }}"

      - name: SAM Build
        run: sam build --use-container

      - name: SAM Deploy
        run: |
          sam deploy \
            --stack-name ${{ env.STACK_NAME }} \
            --region ${{ env.AWS_REGION }} \
            --resolve-s3 \
            --parameter-overrides \
              ToEmailAddress=${{ secrets.TO_EMAIL_ADDRESS }} \
              FromEmailAddress=${{ secrets.FROM_EMAIL_ADDRESS }} \
              OpenAIApiKey=${{ secrets.OPENAI_API_KEY }} \
              PerplexityApiKey=${{ secrets.PERPLEXITY_API_KEY }} \
              ScheduleExpression="${{ secrets.SCHEDULE_EXPRESSION || 'cron(0 5 * * ? *)' }}" \
            --capabilities CAPABILITY_IAM \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --tags \
              Environment=dev \
              Project=me2resh-daily \
              ManagedBy=GitHub-Actions

      - name: Get Stack Outputs
        id: stack-outputs
        run: |
          aws cloudformation describe-stacks \
            --stack-name ${{ env.STACK_NAME }} \
            --region ${{ env.AWS_REGION }} \
            --query 'Stacks[0].Outputs' \
            --output json > stack-outputs.json
          cat stack-outputs.json

      - name: Upload stack outputs
        uses: actions/upload-artifact@v4
        with:
          name: stack-outputs
          path: stack-outputs.json
          retention-days: 30

      - name: Deployment Summary
        run: |
          echo "## Deployment Summary :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Stack Name**: ${{ env.STACK_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Region**: ${{ env.AWS_REGION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: dev" >> $GITHUB_STEP_SUMMARY
          echo "- **Email**: ${{ secrets.TO_EMAIL_ADDRESS }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Stack Outputs" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
          cat stack-outputs.json >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
