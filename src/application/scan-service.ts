import { ScanResult } from '@/domain/scan-result';
import { SourceConfiguration } from '@/domain/source-config';
import { ReportGenerator } from '@/infrastructure/report-generator';
import { logger } from '@/utils/logger';

export class ScanService {
    constructor(
        private config: SourceConfiguration,
        private reportGenerator: ReportGenerator,
    ) {}

    async performScan(): Promise<ScanResult> {
        logger.info('Starting daily scan', {
            timezone: this.config.scan_config.timezone,
        });

        const scanDate = new Date().toISOString().split('T')[0];

        logger.info('Sending prompt to ChatGPT for analysis - ChatGPT will fetch sources itself');

        // Just send the prompt to ChatGPT - it will do everything
        const report = await this.reportGenerator.generateReport({
            date: scanDate,
            timezone: this.config.scan_config.timezone,
            items: [], // No items needed - ChatGPT does its own research
        });

        logger.info('Report generated by ChatGPT', {
            topSignals: report.top_signals?.length ?? 0,
            securityAlerts: report.security_alerts?.length ?? 0,
            awsChanges: report.aws_platform_changes?.length ?? 0,
            aiTrends: report.ai_trends?.length ?? 0,
        });

        return report;
    }
}
