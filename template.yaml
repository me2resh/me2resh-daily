AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  me2resh-daily
  Daily executive intelligence scan that aggregates platform, architecture, and security updates

Parameters:
  ToEmailAddress:
    Type: String
    Description: Email address to send daily reports to
    Default: ""

  FromEmailAddress:
    Type: String
    Description: Verified SES email address to send from
    Default: ""

  OpenAIApiKey:
    Type: String
    Description: OpenAI API key for ChatGPT analysis
    NoEcho: true

  PerplexityApiKey:
    Type: String
    Description: Perplexity API key for web research (optional)
    NoEcho: true
    Default: ""

Globals:
  Function:
    Timeout: 900
    Tracing: Active
    MemorySize: 512
    Runtime: nodejs18.x
    Architectures:
      - x86_64
    Environment:
      Variables:
        TO_EMAIL_ADDRESS: !Ref ToEmailAddress
        FROM_EMAIL_ADDRESS: !Ref FromEmailAddress
        OPENAI_API_KEY: !Ref OpenAIApiKey
        PERPLEXITY_API_KEY: !Ref PerplexityApiKey
        CONFIG_PATH: /opt/config/sources.yaml   # read from the layer
        REQUIREMENT_PATH: /opt/config/REQUIREMENTS.txt   # read from the layer
        REPORTS_BUCKET_NAME: me2resh-daily-scan

Resources:
  ReportsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: me2resh-daily-scan
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  ReportsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ReportsBucket
      PolicyDocument:
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub '${ReportsBucket.Arn}/*'

  DailyConfigLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: me2resh-daily-config
      Description: Static configuration for me2resh-daily (sources.yaml)
      ContentUri: layer-config/                # repo path: layer-config/config/sources.yaml
      CompatibleRuntimes: [ nodejs18.x ]
      LicenseInfo: MIT
      RetentionPolicy: Delete

  DailyScanFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: daily-scan.lambdaHandler
      Description: Performs daily scan of platform and architecture sources
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - ses:SendEmail
                - ses:SendRawEmail
              Resource:
                - !Sub 'arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/${FromEmailAddress}'
                - !Sub 'arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/${ToEmailAddress}'
            - Effect: Allow
              Action:
                - s3:PutObject
                - s3:PutObjectAcl
              Resource:
                - !Sub '${ReportsBucket.Arn}/*'
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: '*'

      Layers:
        - !Ref DailyConfigLayer
      Events:
        DailySchedule:
          Type: ScheduleV2
          Properties:
            # Run at 05:00 Europe/London every day (Quartz cron)
            ScheduleExpression: "cron(0 5 * * ? *)"
            ScheduleExpressionTimezone: Europe/London
            FlexibleTimeWindow:
              Mode: "OFF"            # must be quoted: YAML 1.1 would coerce OFF->false
            Name: Me2reshDailyScanSchedule
            Description: Triggers daily scan at 05:00 Europe/London
            State: ENABLED
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - src/command/lambda/daily-scan.ts
        External:
          - '@aws-sdk/*'

Outputs:
  DailyScanFunction:
    Description: Daily Scan Lambda Function ARN
    Value: !GetAtt DailyScanFunction.Arn

  DailyScanFunctionRole:
    Description: IAM Role created for Daily Scan function
    Value: !GetAtt DailyScanFunctionRole.Arn

  ReportsBucketName:
    Description: S3 bucket name for reports
    Value: !Ref ReportsBucket

  ReportsBucketWebsiteURL:
    Description: S3 bucket website URL
    Value: !GetAtt ReportsBucket.WebsiteURL

  ScheduleExpressionOut:
    Description: Deployed EventBridge Scheduler expression
    Value: "cron(0 5 * * ? *)"